# Generated by Django 2.2.11 on 2020-07-04 05:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_public', models.IntegerField()),
                ('is_verified', models.IntegerField()),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation',
            },
        ),
        migrations.CreateModel(
            name='AnnotationAttemptSequential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation_attempt_sequential',
            },
        ),
        migrations.CreateModel(
            name='AnnotationAttemptThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation_attempt_threshold',
            },
        ),
        migrations.CreateModel(
            name='AnnotationSplit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cumulative_distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('cumulative_time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation_split',
            },
        ),
        migrations.CreateModel(
            name='AnnotationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('description', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation_type',
            },
        ),
        migrations.CreateModel(
            name='AnnotationVote',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('up', models.IntegerField()),
                ('down', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation_vote',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'area',
            },
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('wind', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attempt',
            },
        ),
        migrations.CreateModel(
            name='AttemptSequential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attempt_sequential',
            },
        ),
        migrations.CreateModel(
            name='AttemptThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attempt_threshold',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='CategoryHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category_hierarchy',
            },
        ),
        migrations.CreateModel(
            name='CategoryMeet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category_meet',
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coach',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('is_flagged', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_start', models.DateTimeField(blank=True, null=True)),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('url', models.CharField(max_length=255)),
                ('participants', models.PositiveIntegerField()),
                ('expected_competitiveness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('actual_competitiveness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('expected_eliteness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('actual_eliteness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competition',
            },
        ),
        migrations.CreateModel(
            name='CompetitionEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'competition_event',
            },
        ),
        migrations.CreateModel(
            name='CompetitionRace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_interval', models.PositiveIntegerField()),
                ('distance', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competition_race',
            },
        ),
        migrations.CreateModel(
            name='CompetitionRaceHurdles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.DecimalField(decimal_places=3, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionSimilarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competition_similarity',
            },
        ),
        migrations.CreateModel(
            name='CompetitionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competition_type',
            },
        ),
        migrations.CreateModel(
            name='CompetitionWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.DecimalField(decimal_places=3, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='CourseGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('degrees', models.FloatField(blank=True, null=True)),
                ('start', models.DecimalField(decimal_places=2, max_digits=10)),
                ('end', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_grade',
            },
        ),
        migrations.CreateModel(
            name='CourseSimilarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_similarity',
            },
        ),
        migrations.CreateModel(
            name='CourseSurface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('start', models.DecimalField(decimal_places=2, max_digits=10)),
                ('end', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_surface',
            },
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_type',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'discipline',
            },
        ),
        migrations.CreateModel(
            name='Disqualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'disqualification',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'division',
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'environment',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='EventDistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_distance',
            },
        ),
        migrations.CreateModel(
            name='EventHurdles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_hurdles',
            },
        ),
        migrations.CreateModel(
            name='EventWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_weight',
            },
        ),
        migrations.CreateModel(
            name='FieldOfPlay',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('established', models.DateTimeField(blank=True, null=True)),
                ('retired', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'field_of_play',
            },
        ),
        migrations.CreateModel(
            name='Heat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall', models.IntegerField()),
                ('name', models.CharField(max_length=75)),
                ('description', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heat',
            },
        ),
        migrations.CreateModel(
            name='HeatClustering',
            fields=[
                ('split_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('min_eps', models.DecimalField(decimal_places=3, max_digits=10)),
                ('max_eps', models.DecimalField(decimal_places=3, max_digits=10)),
                ('min_points', models.PositiveIntegerField()),
                ('max_points', models.PositiveIntegerField()),
                ('fuzzy', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heat_clustering',
            },
        ),
        migrations.CreateModel(
            name='HeatClusteringAssignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster', models.IntegerField()),
                ('membership', models.DecimalField(decimal_places=3, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heat_clustering_assignments',
            },
        ),
        migrations.CreateModel(
            name='HeatSimilarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heat_similarity',
                'verbose_name_plural': 'heat similarities',
            },
        ),
        migrations.CreateModel(
            name='Legitimacies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'legitimacies',
                'verbose_name_plural': 'legitimacies',
            },
        ),
        migrations.CreateModel(
            name='Meet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('championship', models.IntegerField()),
                ('expected_competitiveness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('actual_competitiveness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('expected_eliteness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('actual_eliteness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meet',
            },
        ),
        migrations.CreateModel(
            name='MeetInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('url', models.CharField(max_length=500)),
                ('participants', models.PositiveIntegerField()),
                ('expected_competitiveness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('actual_competitiveness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('expected_eliteness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('actual_eliteness', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meet_instance',
            },
        ),
        migrations.CreateModel(
            name='MeetInstanceReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'meet_instance_review',
            },
        ),
        migrations.CreateModel(
            name='MeetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meet_type',
            },
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mode',
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('squad', models.CharField(blank=True, max_length=1, null=True)),
                ('place', models.PositiveSmallIntegerField()),
                ('points', models.SmallIntegerField(blank=True, null=True)),
                ('bib', models.PositiveIntegerField(blank=True, null=True)),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('reaction_time', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('wind', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('unattached', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAgeGroup',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('min_age', models.PositiveIntegerField()),
                ('max_age', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance_age_group',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAnnotation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance_annotation',
            },
        ),
        migrations.CreateModel(
            name='PerformanceSimilarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance_similarity',
            },
        ),
        migrations.CreateModel(
            name='PerformanceState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance_state',
            },
        ),
        migrations.CreateModel(
            name='RelayMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_alternate', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'relay_member',
                'verbose_name_plural': 'relay members',
            },
        ),
        migrations.CreateModel(
            name='RelayPerformanceParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'relay_performance_participant',
                'verbose_name_plural': 'relay performance participants',
            },
        ),
        migrations.CreateModel(
            name='RelaySplit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leg', models.PositiveIntegerField()),
                ('cumulative_distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('leg_distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('cumulative_time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('leg_time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'relay_split',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='ReviewFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_flag',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('content', models.TextField()),
                ('proposed_at', models.DateField(blank=True, null=True)),
                ('proposed_by', models.PositiveIntegerField(blank=True, null=True)),
                ('active_at', models.DateField()),
                ('appealed_at', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_by', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rule',
            },
        ),
        migrations.CreateModel(
            name='Sanctions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_violation_date', models.DateField(blank=True, null=True)),
                ('end_violation_date', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sanctions',
                'verbose_name_plural': 'sanctions',
            },
        ),
        migrations.CreateModel(
            name='Scoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scoring',
            },
        ),
        migrations.CreateModel(
            name='Seed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed_source_id', models.PositiveIntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'seed',
            },
        ),
        migrations.CreateModel(
            name='SeedMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'seed_method',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series',
                'verbose_name_plural': 'series',
            },
        ),
        migrations.CreateModel(
            name='SeriesHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_hierarchy',
            },
        ),
        migrations.CreateModel(
            name='SeriesMeet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_meet',
            },
        ),
        migrations.CreateModel(
            name='SocialClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'social_class',
                'verbose_name_plural': 'social classes',
                'verbose_name': 'social class',
            },
        ),
        migrations.CreateModel(
            name='SocialClassAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'social_class_alias',
                'verbose_name_plural': 'social class aliases',
            },
        ),
        migrations.CreateModel(
            name='Split',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cumulative_distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('cumulative_time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'split',
            },
        ),
        migrations.CreateModel(
            name='SponsorshipAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sponsorship_athlete',
            },
        ),
        migrations.CreateModel(
            name='SponsorshipCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sponsorship_competition',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('wikipedia', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'sport',
            },
        ),
        migrations.CreateModel(
            name='SportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sport_type',
            },
        ),
        migrations.CreateModel(
            name='StagingAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heat_id', models.PositiveIntegerField()),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('wind', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_attempt',
            },
        ),
        migrations.CreateModel(
            name='StagingAttemptSequential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_attempt_sequential',
            },
        ),
        migrations.CreateModel(
            name='StagingAttemptThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_attempt_threshold',
            },
        ),
        migrations.CreateModel(
            name='StagingCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('url', models.CharField(max_length=255)),
                ('source', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_competition',
            },
        ),
        migrations.CreateModel(
            name='StagingEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('website', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_entity',
            },
        ),
        migrations.CreateModel(
            name='StagingHeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall', models.IntegerField()),
                ('name', models.CharField(max_length=75)),
                ('description', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'staging_heat',
            },
        ),
        migrations.CreateModel(
            name='StagingMeet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('championship', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'staging_meet',
            },
        ),
        migrations.CreateModel(
            name='StagingMeetInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing_system_id', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('url', models.CharField(max_length=500)),
                ('source', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_meet_instance',
            },
        ),
        migrations.CreateModel(
            name='StagingPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staging_identity_id', models.PositiveIntegerField()),
                ('staging_organization_id', models.PositiveIntegerField(blank=True, null=True)),
                ('squad', models.CharField(blank=True, max_length=1, null=True)),
                ('place', models.PositiveSmallIntegerField()),
                ('points', models.SmallIntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('reaction_time', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('wind', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('unattached', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_performance',
            },
        ),
        migrations.CreateModel(
            name='StagingRelayMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_relay_members',
            },
        ),
        migrations.CreateModel(
            name='StagingRelayPerformanceParticipants',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('sequence', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_relay_performance_participants',
            },
        ),
        migrations.CreateModel(
            name='StagingRelaySplit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leg', models.PositiveIntegerField()),
                ('cumulative_distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('leg_distance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('cumulative_time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('leg_time', models.DecimalField(decimal_places=3, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_relay_split',
            },
        ),
        migrations.CreateModel(
            name='StagingVenue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(max_length=300)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('elevation', models.DecimalField(decimal_places=8, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'staging_venue',
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'strategy',
                'verbose_name_plural': 'strategies',
            },
        ),
        migrations.CreateModel(
            name='Substances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('wikipedia_url', models.CharField(max_length=100)),
                ('is_banned', models.PositiveIntegerField()),
                ('banned_at', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'substances',
                'verbose_name_plural': 'substances',
            },
        ),
        migrations.CreateModel(
            name='Surface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surface',
            },
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('level', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tier',
            },
        ),
        migrations.CreateModel(
            name='TimingSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'timing_system',
            },
        ),
    ]
