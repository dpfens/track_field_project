"""
Django settings for track_field_project project.

Generated by 'django-admin startproject' using Django 2.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0zna@*a6*09wqsfj26qx&cs=7-la56#drig5s=!jshr05)58m9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'track_field_project.apps.DefaultAdminConfig',
    #'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django_user_agents',
    'analytics',
    'athletics',
    'identity',
    'geography',
    'utility'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'track_field_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'utility.context_processors.privacy',
                'identity.context_processors.identity',
                'analytics.context_processors.log_request',
            ],
        },
    },
]

WSGI_APPLICATION = 'track_field_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'track_field_project',
        'USER': 'root',
        'PASSWORD': 'Speedy31790',
        'HOST': '127.0.0.1',
        'PORT': 3306
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "default": {
            "format": "%(asctime)s - %(name)s - %(levelname)s - %(module)s - %(funcName)s - %(lineno)d - %(message)s"
        },
    },
    "handlers": {
        "application_handler": {
            "level": "ERROR",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/application.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True
        },
        "mail_admins": {
            "level": "ERROR",
            "class": "django.utils.log.AdminEmailHandler",
            "email_backend": "django.core.mail.backends.filebased.EmailBackend",
            "filters": [],
        },
        "analytics_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/analytics.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True
        },
        "athletics_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/athletics.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True
        },
        "geography_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/geography.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True,
        },
        "identity_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/identity.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True
        },
        "utility_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/utility.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True
        },
        "request_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/request.log",
            "backupCount": 30,
            "when": "midnight",
            "delay": True,
            "formatter": "default"
        },
        "security_handler": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/security.log",
            "backupCount": 30,
			"when": "midnight",
            "delay": True,
            "formatter": "default"
        }
    },
    "filters": {
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["application_handler"],
            "level": "DEBUG",
            "propagate": True,
        },
        "django.request": {
            "handlers": ["request_handler"],
            "level": "ERROR",
            "propagate": False,
        },
        "django.server": {
            "handlers": [],
            "propagate": False,
        },
        "django.security": {
            "handlers": ["security_handler"],
            "propagate": False,
        },
        "django.db.backends": {
            "handlers": [],
            "level": "DEBUG"
        },
        "analytics": {
            "handlers": ["application_handler", "analytics_handler"],
            "level": "DEBUG"
        },
        "athletics": {
            "handlers": ["application_handler", "athletics_handler"],
            "level": "DEBUG"
        },
        "geography": {
            "handlers": ["application_handler", "geography_handler"],
            "level": "DEBUG"
        },
        "identity": {
            "handlers": ["application_handler", "identity_handler"],
            "level": "DEBUG"
        },
        "utility": {
            "handlers": ["application_handler", "utility_handler"],
            "level": "DEBUG"
        }
    },
}
